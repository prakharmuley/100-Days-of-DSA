Problem Link: https://leetcode.com/problems/binary-tree-level-order-traversal/



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<>(); 
        if(root==null) return res;
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        res.add(Arrays.asList(root.val));
        while(!q.isEmpty())
        {
            int n=q.size();
            List<Integer> l=new ArrayList<>();
            for(int i=0;i<n;i++)
            {
                TreeNode cur=q.poll();
                if(cur.left!=null)
                {
                    q.offer(cur.left);
                    l.add(cur.left.val);
                }
                if(cur.right!=null)
                {
                    q.offer(cur.right);
                    l.add(cur.right.val);
                }
            }
            res.add(l);
        }
        res.remove(res.size()-1);
        return res;
    }
    
}
