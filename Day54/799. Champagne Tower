Problem Link: https://leetcode.com/problems/champagne-tower/



class Solution {
    private Double dp[][]=new Double[101][101];
    public double fun(int p, int r, int c)
    {
         if(r<0||c<0||c>r) return 0.00;
        if(r==0&&c==0) return p;
            
        if(dp[r][c]!=null) return dp[r][c];
        double l=(fun(p,r-1,c-1)-1)/2.0;
        if(l<0) l=0;
        double ri=(fun(p,r-1,c)-1)/2.0;
        if(ri<0) ri=0;
        dp[r][c]=l+ri;
        return dp[r][c];
    }
    public double champagneTower(int p, int r, int c) {
       
      return Math.min(1.00,fun(p,r,c));
    }
}
