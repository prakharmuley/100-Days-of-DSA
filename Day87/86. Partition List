Problem Link: https://leetcode.com/problems/partition-list/



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        if(head==null||head.next==null) return head;
        ListNode temp=head;
        ListNode it=head;
        ListNode smaller=new ListNode(-1);
        ListNode s=smaller;
        ListNode greater_equal=new ListNode(-1);
        ListNode g=greater_equal;
        while(it!=null)
        {
            if(it.val<x) {smaller.next=it; smaller=smaller.next;}
            else
            {
                greater_equal.next=it;
                greater_equal=greater_equal.next;
            }
            it=it.next;
            
        }
      //  System.out.print( greater_equal.next.val+"\n");
        greater_equal.next=null;
        smaller.next=g.next;
        return s.next;
    }
}
