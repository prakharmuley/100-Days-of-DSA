Problem Link: https://leetcode.com/problems/swapping-nodes-in-a-linked-list/



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapNodes(ListNode head, int k) {
        if(head==null||head.next==null) return head;
        ListNode first_kth=null;
        ListNode last_kth=null;
        ListNode temp=head;
        int c=0,n=0;
        while(temp!=null)
        {
            temp=temp.next;
            n++;
        }
        temp=head;
        while(temp!=null)
        {
            c++;
            if(c==k) first_kth=temp;
            if(c==n-k+1) last_kth=temp;   
            temp=temp.next;    
        }
        if(first_kth==last_kth) return head;
        first_kth.val^=last_kth.val;
        last_kth.val^=first_kth.val;
        first_kth.val^=last_kth.val;
        
        return head;
        
    }
}
