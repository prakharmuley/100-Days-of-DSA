Problem Link: https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/




class Solution {
    public List<Integer> maxScoreIndices(int[] nums) {
        int n=nums.length;
        int pre[]=new int[n];
        int suf[]=new int[n];
        int z=0;
        int o=0;
        int ans=0;
        List<Integer> l=new ArrayList<>();
        int idx=0;
        for(int x: nums)
        {
            if(x==1) ans+=1;
        }
        int res[]=new int[n+1];
      
        res[idx]=ans;
        ans=0;
        idx=n;
        for(int x: nums)
        {
            if(x==0) ans++;
        }
       
        res[idx]=ans;
        pre[0]=nums[0]==0?1:0;
        suf[n-1]=nums[n-1]==1?suf[n-1]+=1:0;
        for(int i=1;i<n;i++) {if (nums[i]==0) {pre[i]=(pre[i-1]+1);} else pre[i]=pre[i-1];}
     
        for(int i=n-2;i>=0;i--){if (nums[i]==1) {suf[i]=(suf[i+1]+1);} else suf[i]=suf[i+1];}
        
        
    
        ans=0;
       
        for(int i=1;i<n;i++)
        {      
            
            res[i]=suf[i]+pre[i-1];     
        }
    int mx=0;
        
        for(int x: res) mx=Math.max(x,mx);
      //  System.out.print(mx+" "+"\n");
        int j=0;
      //  for(int x: res) System.out.print((j++)+" "+x+"\n");
        
        
        
        for(int i=0;i<=n;i++) {if(res[i]==mx) {mx=res[i]; l.add(i);}}
      
      
        return l;
    }
}
