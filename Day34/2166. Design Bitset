Problem Link: https://leetcode.com/problems/design-bitset/



class Bitset {
    Set<Integer> hsz;
    Set<Integer> hso;
    int size;
    public Bitset(int size) {
        this.size=size;
       hsz=new HashSet<>();
       hso=new HashSet<>();  
        for(int i=0;i<size;i++) hsz.add(i);
        
        
    }
    
    public void fix(int idx) {
        if(hsz.contains(idx)){
       hsz.remove(idx);
        }
        hso.add(idx);
        
    }
    
    public void unfix(int idx) {
         if(hso.contains(idx)){
       hso.remove(idx);
        }
        hsz.add(idx);  

    }
    
    public void flip() {
        Set<Integer> temp=hso;
        hso=hsz;
        hsz=temp;
    }
    
    public boolean all() {
       return hsz.size()==0;
    }
    
    public boolean one() {
        return hso.size()!=0;
    }
    
    public int count() {
        return hso.size();
    }
    
    public String toString() {
       
      StringBuilder sb=  new StringBuilder();
        for(int i=0;i<size;i++) {
            if(hso.contains(i)) sb.append("1"); 
            else if(hsz.contains(i)) sb.append("0");
        }
        return sb.toString();
        
    }
}

/**
 * Your Bitset object will be instantiated and called as such:
 * Bitset obj = new Bitset(size);
 * obj.fix(idx);
 * obj.unfix(idx);
 * obj.flip();
 * boolean param_4 = obj.all();
 * boolean param_5 = obj.one();
 * int param_6 = obj.count();
 * String param_7 = obj.toString();
 */
