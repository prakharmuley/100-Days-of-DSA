Problem Link: https://leetcode.com/problems/search-in-rotated-sorted-array-ii/



class Solution {
    public boolean search(int[] nums, int target) {
        int l=0;
        int h=nums.length-1;
        while(l<=h)
        {
            int m=l+((h-l)/2);
            if(nums[m]==target) return true;
             while(nums[m]==nums[h]&&m!=h) h--;
             while(nums[m]==nums[l]&&m!=l) l++;
            if(nums[l]<=nums[m])
            {
                if(nums[l]<=target&&nums[m]>target)
                {
                    h=m-1;
                }
                else
                {
                    l=m+1;
                }
            }
            else
            {
                if(nums[h]>=target&&nums[m]<target)
                {
                   l=m+1;
                }
                else
                {
                    h=m-1;
                }
            }
        }
        return false;
    }
}
