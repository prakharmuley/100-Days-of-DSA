Problem Link: https://leetcode.com/problems/average-of-levels-in-binary-tree/



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> l=new ArrayList<>();
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        
        while(!q.isEmpty())
        {
            int n=q.size();
             long avg=0;
            for(int i=0;i<n;i++)
            {
               
                TreeNode cur=q.poll();
                avg+=(long)cur.val;
                if(cur.left!=null) q.offer(cur.left);
                if(cur.right!=null) q.offer(cur.right);
     
            }
            double average=(double)((double)avg/(double)n);
            l.add((double)average);
        }
        return l;
    }
}
