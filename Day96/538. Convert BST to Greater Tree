Problem Link: https://leetcode.com/problems/convert-bst-to-greater-tree/



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode convertBST(TreeNode root) {
        if(root==null) return root;
        int sum=0;
        Stack<TreeNode> st=new Stack<>();
        TreeNode temp=root;
        while(!st.isEmpty()||temp!=null)
        {
            while(temp!=null)
            {
                st.push(temp);
                temp=temp.right;
            }
            temp=st.pop();
            sum+=temp.val;
            temp.val=sum;
            temp=temp.left;
        }
        return root;
    }
}
