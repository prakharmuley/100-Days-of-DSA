Problem Link: https://leetcode.com/problems/jump-game-iv/



class Solution {
    int cnt=0;
  
    public int minJumps(int[] a) {
      int n=a.length; 
           if (n == 1) return 0;
        Map<Integer,List<Integer>> mp=new HashMap<>();
        
        for(int i=0;i<n;i++)
        {
         if(!mp.containsKey(a[i]))
         {
             List<Integer> l=new ArrayList<>();
             l.add(i);
             mp.put(a[i],l);
         }
            else
            {
                List<Integer> l=mp.get(a[i]);
                l.add(i);
                mp.put(a[i],l);
            }
             
        }
      
       
        Queue<Integer> q=new LinkedList<>();
        q.offer(0);
        while(!q.isEmpty())
        {
            int size=q.size();
            cnt++;
            for(int i=0;i<size;i++)
            {
                int temp=q.poll();
                if(temp+1<n&&mp.containsKey(a[temp+1]))
                {
                    if(temp+1==n-1) return cnt;
                    q.offer(temp+1);
                }
                if(temp-1>=0&&mp.containsKey(a[temp-1]))
                {
                    q.offer(temp-1);
                }
                if(mp.containsKey(a[temp]))
                {
                    for(int x: mp.get(a[temp]))
                    {
                       if(temp!=x)
                       {
                           if(x==n-1) return cnt;
                           else q.offer(x);
                       }
                    }
                    mp.remove(a[temp]);
                }
            }
            
        }
        return cnt;    
    }
}
