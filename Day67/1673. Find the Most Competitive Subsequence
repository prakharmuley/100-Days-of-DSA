Problem Link: https://leetcode.com/problems/find-the-most-competitive-subsequence/



class Solution {
    public int[] mostCompetitive(int[] nums, int k) {
      
        int n=nums.length;
        Stack<Integer> st=new Stack<>();
        int left=n-k;
        for(int i=0;i<n;i++)
        {
           while(!st.isEmpty()&&nums[st.peek()]>nums[i]&&n-i+st.size()>k)
           {
               st.pop();
             
           }
            if(st.size()<k)
              st.push(i);
        }
        int a[]=new int[k];
        for(int i=k-1;i>=0;i--) a[i]=nums[st.pop()];
        return a;
        
    }
}
